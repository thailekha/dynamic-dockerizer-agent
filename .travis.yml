aws_common: &aws_common
  env:
  - secure: "Cqy2sl+6vKADMZdNxNZtTHsOCDJanUHQKSN+gamn3jdH7NKvCmtWRmQYNQQkJepeMld2N+o4XXjEjRuf2UYEx8NBQCBtMn64BY9gfYJ9gx5hSfeELsSomINsNLBmYJqQTGGFz7GwqznTSrDfPJxXG5uxZo+xnuotNLyfseEc48zAqlUOSBqv/jmGLy5R55oR/KVzCgPw6NWJJAnhjBKeUWjEmjs1fyZpn/Ol99ozQuOzetRETfcBKwfgJyWVvlHp6GWFS2Xbpt/P1uByv/wKrk+JZ0BZSRH8UqSJTkzCvQWi/9aJb0h1hc+TEVzKY2MQhk0yXaTvZ+q+1V0FOAYzZQcc1cfEw9cnQNubf/Rh5fewuLWDXrFdELQJGTR0qIG0Gb1QDf2fwah8n8NXVi51k86SbOTdQ7uFXlxw8EyY+spsBfX1/9mENf8AHHTOKV5Cr50mDGs5gnssjpE/v8XCXpsNY66FdD9H2Y4zmAAM3pN7xWw0oT+3UIq4SN4tcTVjcr2RnLXWpHc+5uZ8XOBPGnqPUYl06o0OkoujJbW9CKkZGesj5puVzKkMS4NKuu4v2KOGtYMjU3F/FJbE0yXdr5QUCq5C3wcB/yCQwmG74gAWSfb/CMjGP6kGaxv+PT/V6eilwHe8GSha73MXfyceFKt6jvs0Oq+cygEjDGTp3XY="
  - secure: "dgrqPtcClimXVl3FXwkF/6nCT/N0vleal3elKZdZb6Ss4g0KDzpu6aXNuJ2aVS8v7Fw7B1khT4l1eiVnaAQM/YxXbdYjgwy1U+JWnBgIFRFGZzAUr+Rk2KJ/y9Obts8ZPLzWey4X9xuhVeTtuLB1kwfiBfJeo4zxD6LGY+baYGwgAKV5fBL8sZJFelWF/ddQ4OBIClJviVDR29ZmWDLHe7Gcjc26urXfg2St61XEVDHYkDO40sSwrQWrldlGhKtcIONKJcoCnjDlK9fVhgPJoleQB+46RKzU2lxS3q2X8PtOGgzCpgMRGzdD7oEYKoWyc8mS04T7Wz1Jm5/W51onyy6ZH2WCXQmMx+rYFq5UCb49jiCWuxcMCrwLcPdgDJO5QFwyicYmRylG/Fyai5rhHOwCCFrJn7uEiqtYhM52Hz7o6MyiGHamS6JufMXnO9rmc5aBWb/LyW0EWwxnyj9bfQym0/2OxSwy06+J6hzUEmDaDyNe5t1AUR5smWaqSKpOsNrx3uKQ3/Ym1ESp2/GSacP6G8eW3OK3/RwD2B9Ovz4mlz0c0CAfm0/tqmei5fR9kdGp8RILqeCWqp0I9S75KlBaN8QIGQGRqok3/XF4ZuslauhLCm0mnn9rviBOxyfz7fiVunOQLLYVicyzH0EuqCGVdtaD6u3WH80UzlB+ulc="
  - AWS_DEFAULT_REGION=eu-west-1
  - PATH=$HOME/.local/bin:$PATH
  before_install:
  - pip install --user awscli
  - mkdir -p ~/$TRAVIS_BUILD_NUMBER
  - aws s3 sync s3://dd-cicd/agent/$TRAVIS_BUILD_NUMBER ~/$TRAVIS_BUILD_NUMBER
dd_common: &dd_common
  if: type IN (push)
  sudo: required
  dist: trusty
  language: bash
  install:
  - sudo apt-get -y install dpkg-repack tree build-essential apt-rdepends
  - curl -sL https://deb.nodesource.com/setup_6.x | sudo -E bash -
  - sudo apt-get install -y nodejs
  - sudo npm install -g yarn
jobs:
  include:
    # =======================
    # Code quality scans (start)
    # =======================
    - stage: Code quality and tests
      if: type IN (push)
      dist: trusty
      language: bash
      addons:
        sonarcloud:
          organization: "thailekha-github"
          token:
            secure: "pcoMbElGfLA7JQfMpLgZKYZS/l77ClMPHcA3+HDjKCgrBCECN3vGdxRG4MHjS24JyEO6DObCt88lVJkozUdFU9k7WZNl30BTX5Xus+1UNZ1C9igRjwVNjmAkG38wDHxqkeBfCbxBykmjnxwhS5Gk1w+e46ZWkH97aIidB8RxqQnTiolUlW3VGatGQdZ4zy8fYZNRsOFpiplO2PMxHoCe+oK0Ejok40Q4vUFQRSi/PTsrFx4lNCP44IuCwVOGJ5GoJOmW1BzMN6yqOUGVEp2PFFDS3lqfehXeqRKwF7qmDHXLlv4qnXIgB76U0OKxmrP/1I83k9Tutx249xiBG5I6njmn4Fy2l/YrrhN3IgShraJcCTdZbMHCAh6q8Qp10Jvk0ohZsclSI84W3zOsandq/lUSd7eEWgF60ieV2jWI+7VENw40S1ktrwAHiZQDQy07r5PMOwuT33hjUi3ZoUw8n29gZEQFJqfF+86YuFUTu5e9eWJSm0JrC08LCUF9MZ0aKruZYkLBiKUR6nb2mxQyO3mkGY5OWheOKejKCXmzxBntI3rry1xg58ldzJltQ1XI+hsTCLcupl2DQ4YjcEQEMvRYcVwl9S/PJ+e2uHGWMW/LOk+6NxFJ71HtPZQ2L29QYaRnNpznpz0ueyvuqhtmWL06pYRxtmB0cIB4vS7bRFo="
      script:
      - sonar-scanner --debug
    # =======================
    # Code quality scans (end)
    # =======================
    # =======================
    # Unit tests (start)
    # =======================
    -
      <<: *dd_common
      before_script:
      - yarn install
      - npm run build
      script:
      - npm run test
    # =======================
    # Unit tests (end)
    # =======================
    # =======================
    # E2E tests (start)
    # =======================
    -
      <<: *aws_common
      <<: *dd_common
      services:
      - docker
      before_script:
      - sudo cp $(sudo which node) ~/.
      - cp ./assets/index.js ~/.
      - sudo ~/node ~/index.js &
      - yarn install
      - npm run build
      script:
      - curl localhost:7999
      - sudo ./node_modules/.bin/nyc --reporter=json --reporter=lcov --reporter=text ./node_modules/.bin/_mocha ./dist/tests/procezz.test.js --grep convertnopackage --timeout 600000 --exit
      - sudo kill $(sudo lsof -ti tcp:7999)
      - docker images -a | grep "dd-agent" | awk '{print $3}' | xargs docker run --network=host --privileged -d
      - sleep 3
      - curl localhost:7999
      - sudo mv coverage/coverage-final.json ~/$TRAVIS_BUILD_NUMBER/coverage-procezz-convertnopackage.json
      - aws s3 sync ~/$TRAVIS_BUILD_NUMBER s3://dd-cicd/agent/$TRAVIS_BUILD_NUMBER
    -
      <<: *aws_common
      <<: *dd_common
      services:
      - docker
      before_script:
      - sudo apt-get install nginx
      - yarn install
      - npm run build
      script:
      - sudo ./node_modules/.bin/nyc --reporter=json --reporter=lcov --reporter=text ./node_modules/.bin/_mocha ./dist/tests/procezz.test.js --grep convertnginx --timeout 600000 --exit
      - sudo service nginx stop || echo service does not seem to be running
      - docker images -a | grep "dd-agent" | awk '{print $3}' | xargs docker run --network=host --privileged -d
      - curl localhost:80
      - sudo mv coverage/coverage-final.json ~/$TRAVIS_BUILD_NUMBER/coverage-procezz-convertnginx.json
      - aws s3 sync ~/$TRAVIS_BUILD_NUMBER s3://dd-cicd/agent/$TRAVIS_BUILD_NUMBER
    -
      <<: *aws_common
      <<: *dd_common
      services:
      - docker
      before_script:
      - sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv EA312927
      - sudo echo 'deb http://repo.mongodb.org/apt/ubuntu trusty/mongodb-org/3.2 multiverse' | sudo tee /etc/apt/sources.list.d/mongodb-org-3.2.list
      - sudo apt-get -y update
      - sudo apt-get -y install mongodb-org
      - yarn install
      - npm run build
      script:
      - echo -e 'use testdb \n db.testDocument.insert({"a":"dataispreserved"}) \n ' | mongo --quiet
      - sudo ./node_modules/.bin/nyc --reporter=json --reporter=lcov --reporter=text ./node_modules/.bin/_mocha ./dist/tests/procezz.test.js --grep convertmongod --timeout 600000 --exit
      - sudo service mongod stop || echo service does not seem to be running
      - docker images -a | grep "dd-agent" | awk '{print $3}' | xargs docker run --network=host --privileged -d
      - echo 'db.stats().ok' | mongo
      - echo -e 'use testdb \n db.testDocument.find() \n ' | mongo --quiet | grep dataispreserved
      - sudo mv coverage/coverage-final.json ~/$TRAVIS_BUILD_NUMBER/coverage-procezz-convertmongod.json
      - aws s3 sync ~/$TRAVIS_BUILD_NUMBER s3://dd-cicd/agent/$TRAVIS_BUILD_NUMBER
    -
      <<: *aws_common
      <<: *dd_common
      install:
      - curl -sL https://deb.nodesource.com/setup_6.x | sudo -E bash -
      - sudo apt-get install -y nodejs
      - sudo npm install -g yarn
      before_script:
      - yarn install
      - npm run build
      script:
      - sudo ./node_modules/.bin/nyc --reporter=json --reporter=lcov --reporter=text ./node_modules/.bin/_mocha ./dist/tests/checkhost.test.js --grep checkhost --timeout 20000 --exit
      - sudo mv coverage/coverage-final.json ~/$TRAVIS_BUILD_NUMBER/coverage-checkhost-missingpackages.json
      - aws s3 sync ~/$TRAVIS_BUILD_NUMBER s3://dd-cicd/agent/$TRAVIS_BUILD_NUMBER
    -
      <<: *aws_common
      <<: *dd_common
      before_script:
      - yarn install
      - npm run build
      script:
      - sudo ./node_modules/.bin/nyc --reporter=json --reporter=lcov --reporter=text ./node_modules/.bin/_mocha ./dist/tests/checkhost.test.js --grep checkhost --timeout 20000 --exit
      - sudo mv coverage/coverage-final.json ~/$TRAVIS_BUILD_NUMBER/coverage-checkhost-bestcase.json
      - aws s3 sync ~/$TRAVIS_BUILD_NUMBER s3://dd-cicd/agent/$TRAVIS_BUILD_NUMBER
    -
      <<: *aws_common
      <<: *dd_common
      before_script:
      - sudo apt-get install nginx
      - yarn install
      - npm run build
      script:
      - sudo ./node_modules/.bin/nyc --reporter=json --reporter=lcov --reporter=text ./node_modules/.bin/_mocha ./dist/tests/progress.test.js --grep progress --timeout 20000 --exit
      - sudo mv coverage/coverage-final.json ~/$TRAVIS_BUILD_NUMBER/coverage-progress.json
      - aws s3 sync ~/$TRAVIS_BUILD_NUMBER s3://dd-cicd/agent/$TRAVIS_BUILD_NUMBER
    -
      <<: *aws_common
      <<: *dd_common
      before_script:
      - sudo apt-get install nginx
      - yarn install
      - npm run build
      script:
      - sudo ./node_modules/.bin/nyc --reporter=json --reporter=lcov --reporter=text ./node_modules/.bin/_mocha ./dist/tests/procezz.test.js --grep notoken --timeout 20000 --exit
      - sudo mv coverage/coverage-final.json ~/$TRAVIS_BUILD_NUMBER/coverage-procezz-notoken.json
      - aws s3 sync ~/$TRAVIS_BUILD_NUMBER s3://dd-cicd/agent/$TRAVIS_BUILD_NUMBER
    -
      <<: *aws_common
      <<: *dd_common
      before_script:
      - sudo apt-get install nginx
      - yarn install
      - npm run build
      script:
      - sudo ./node_modules/.bin/nyc --reporter=json --reporter=lcov --reporter=text ./node_modules/.bin/_mocha ./dist/tests/procezz.test.js --grep wrongtoken --timeout 20000 --exit
      - sudo mv coverage/coverage-final.json ~/$TRAVIS_BUILD_NUMBER/coverage-procezz-wrongtoken.json
      - aws s3 sync ~/$TRAVIS_BUILD_NUMBER s3://dd-cicd/agent/$TRAVIS_BUILD_NUMBER
    -
      <<: *aws_common
      <<: *dd_common
      before_script:
      - sudo apt-get install nginx
      - yarn install
      - npm run build
      script:
      - sudo ./node_modules/.bin/nyc --reporter=json --reporter=lcov --reporter=text ./node_modules/.bin/_mocha ./dist/tests/procezz.test.js --grep wrongtokenschema --timeout 20000 --exit
      - sudo mv coverage/coverage-final.json ~/$TRAVIS_BUILD_NUMBER/coverage-procezz-wrongtokenschema.json
      - aws s3 sync ~/$TRAVIS_BUILD_NUMBER s3://dd-cicd/agent/$TRAVIS_BUILD_NUMBER
    -
      <<: *aws_common
      <<: *dd_common
      before_script:
      - sudo apt-get install nginx
      - yarn install
      - npm run build
      script:
      - IGNORE_AUTH=TRUE sudo ./node_modules/.bin/nyc --reporter=json --reporter=lcov --reporter=text ./node_modules/.bin/_mocha ./dist/tests/procezz.test.js --grep jwtignored --timeout 20000 --exit
      - sudo mv coverage/coverage-final.json ~/$TRAVIS_BUILD_NUMBER/coverage-procezz-jwtignored.json
      - aws s3 sync ~/$TRAVIS_BUILD_NUMBER s3://dd-cicd/agent/$TRAVIS_BUILD_NUMBER 
    -
      <<: *aws_common
      <<: *dd_common
      before_script:
      - sudo apt-get install nginx
      - yarn install
      - npm run build
      script:
      - sudo ./node_modules/.bin/nyc --reporter=json --reporter=lcov --reporter=text ./node_modules/.bin/_mocha ./dist/tests/procezz.test.js --grep listnginx --timeout 20000 --exit
      - sudo mv coverage/coverage-final.json ~/$TRAVIS_BUILD_NUMBER/coverage-procezz-listnginx.json
      - aws s3 sync ~/$TRAVIS_BUILD_NUMBER s3://dd-cicd/agent/$TRAVIS_BUILD_NUMBER
    -
      <<: *aws_common
      <<: *dd_common
      before_script:
      - sudo apt-get install nginx
      - yarn install
      - npm run build
      script:
      - sudo ./node_modules/.bin/nyc --reporter=json --reporter=lcov --reporter=text ./node_modules/.bin/_mocha ./dist/tests/procezz.test.js --grep inspectnginx --timeout 20000 --exit
      - sudo mv coverage/coverage-final.json ~/$TRAVIS_BUILD_NUMBER/coverage-procezz-inspectnginx.json
      - aws s3 sync ~/$TRAVIS_BUILD_NUMBER s3://dd-cicd/agent/$TRAVIS_BUILD_NUMBER
    -
      <<: *aws_common
      <<: *dd_common
      before_script:
      - yarn install
      - npm run build
      script:
      - sudo ./node_modules/.bin/nyc --reporter=json --reporter=lcov --reporter=text ./node_modules/.bin/_mocha ./dist/tests/procezz.test.js --grep inspectunexistedprocess --timeout 20000 --exit
      - sudo mv coverage/coverage-final.json ~/$TRAVIS_BUILD_NUMBER/coverage-procezz-inspectunexistedprocess.json
      - aws s3 sync ~/$TRAVIS_BUILD_NUMBER s3://dd-cicd/agent/$TRAVIS_BUILD_NUMBER
    # =======================
    # E2E tests (end)
    # =======================
    # =======================
    # Code coverage (start)
    # =======================
    - stage: Aggregate coverage
      if: NOT branch = master
      <<: *aws_common
      sudo: false
      language: node_js
      node_js: "8"
      install:
      - npm i -g codecov istanbul-combine
      script:
      - istanbul-combine -d coverage -p summary -r text -r lcov ~/$TRAVIS_BUILD_NUMBER/*.json
      - ls coverage
      - cp coverage/lcov.info coverage.lcov
      - cp coverage/lcov.info ~/$TRAVIS_BUILD_NUMBER/lcov.info
      - aws s3 sync ~/$TRAVIS_BUILD_NUMBER s3://dd-cicd/agent/$TRAVIS_BUILD_NUMBER
      - mkdir secrets
      - openssl aes-256-cbc -K $encrypted_c2ed09502192_key -iv $encrypted_c2ed09502192_iv -in assets/id_rsa.enc -out secrets/id_rsa -d
      - eval "$(ssh-agent -s)"
      - chmod 600 secrets/id_rsa
      - ssh-add secrets/id_rsa
      - git config --global user.email "thailekha@yahoo.com"
      - git config --global user.name "Travis"
      - git remote add origin-ssh git@github.com:thailekha/dynamic-dockerizer-agent.git
      - git fetch origin-ssh
      - git checkout $TRAVIS_BRANCH
      - git add coverage/lcov.info
      - git commit -m "[ci skip] code coverage"
      - git push origin-ssh $TRAVIS_BRANCH -f
      - codecov
    # =======================
    # Code coverage (end)
    # =======================